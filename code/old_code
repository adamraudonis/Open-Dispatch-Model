
def monthToNum(date):

	return {
	        'Jan' : 1,
	        'Feb' : 2,
	        'Mar' : 3,
	        'Apr' : 4,
	        'May' : 5,
	        'Jun' : 6,
	        'Jul' : 7,
	        'Aug' : 8,
	        'Sep' : 9, 
	        'Oct' : 10,
	        'Nov' : 11,
	        'Dec' : 12
	}[date]

def NumToMonth(num):

	return {
	        1: 'Jan',
	        2: 'Feb',
	        3: 'Mar',
	        4: 'Apr',
	        5: 'May',
	        6: 'Jun',
	        7: 'Jul',
	        8: 'Aug',
	        9: 'Sep', 
	        10: 'Oct',
	        11: 'Nov',
	        12: 'Dec'
	}[num]

	# Scale wind and solar

	# The database doesn't really need dates.

	# Check all same lengths

	#dispatched_array = []

	#for interval in loads:
		#dispatched_resources = {}
		# Name is type + '_' + resource name
		#dispatched_resources[]
		#dispatched_array.append(dispatched_resources)
		
		# Dispatch wind - required
		# Dispatch solar - required
		# Dispatch hydro - like a battery
		# Now sort by variable cost which should look like
		# Dispatch coal
		# Dispatch gas CCCT
		# Dispatch gas SCCT
		# Where electrical batteries should be (Could be used to curtail wind)

	# Dispatching a resource involves, looking up it'

	#resources = []
	#for resource in resources:

	# Create a map of file input names to data

	# Hmmm
	# Not sure if we should create an array of [date,load]
	# and then you could have a function getLoadAtDate() which does

	# Note: have a module of excel processing
	# This has methods to take table formats and convert them to 

	# Another idea is to have modules for each file like a load loading module

	# loop through input files
		# put them into memory
	# make calculations
	# Write output files